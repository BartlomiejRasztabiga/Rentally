name: Backend

defaults:
  run:
    working-directory: backend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        run: |
          pip install poetry
          poetry install -v
      - name: Lint
        run: |
          poetry run ./scripts/lint.sh

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        postgres-version: [12.0, 13.0]

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: rentally
          POSTGRES_PASSWORD: rentally
          POSTGRES_DB: rentally
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        run: |
          pip install poetry
          poetry install -v
      - name: Test
        run: |
          poetry run ./prestart.sh
          poetry run python3 ./app/tests_pre_start.py
          poetry run pytest --cov=app --cov-report=xml app/tests "${@}"
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
